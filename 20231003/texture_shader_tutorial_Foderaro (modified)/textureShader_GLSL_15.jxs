<jittershader name = "myFirstShader">
 <description> That is my first shader </description>
 <param name="textureMatrix0" type="mat4" state="TEXTURE0_MATRIX" />
 <param name="textureMatrix1" type="mat4" state="TEXTURE1_MATRIX" />
 <param name="MVP" type="mat4" state="MODELVIEW_PROJECTION_MATRIX" />
 <param name="pos" type="vec3" state="POSITION" />
 <param name="uv" type="vec2" state="TEXCOORD" />
 <param name = "color" type = "vec3" default = "1.0 1.0 1.0" />
 <param name = "tex0" type = "int" default = "0" />
 <param name = "tex1" type = "int" default = "1" />
 <language name = "glsl" version = "1.5">
 <bind param="textureMatrix0" program="vp" />
 <bind param="textureMatrix1" program="vp" />
 <bind param="MVP" program="vp" />
 <bind param="pos" program="vp" />
 <bind param="uv" program="vp" />
 <bind param = "color" program = "fp" />
 <bind param = "tex0" program = "fp" />
 <bind param = "tex1" program = "vp" />
 <program name = "vp" type = "vertex">
<![CDATA[
#version 330 core

in vec3 pos;
in vec2 uv;

out jit_PerVertex {
  vec2 texcoord0;
  vec3 textureNoise;
} jit_out;

uniform mat4 textureMatrix0;
uniform mat4 textureMatrix1;
uniform mat4 MVP;
uniform sampler2D tex1;

void main(void) {

vec2 texcoord0 = vec2(textureMatrix0 * vec4(uv, 0., 1.));
vec2 texcoord1 = vec2(textureMatrix1 * vec4(uv, 0., 1.));
//if(texcoord1 > vec2(50.0)) texcoord1 = vec2(50.0) - texcoord1;
vec3 textureNoise = texture(tex1, texcoord1*2.0).xyz;
vec3 displacedPos = pos.xyz + textureNoise*0.1;
gl_Position = MVP * vec4(displacedPos, 1.0);
jit_out.texcoord0 = texcoord0;
jit_out.textureNoise = textureNoise;

}
]]>
</program>

<program name="fp" type="fragment"  >
<![CDATA[
#version 330 core 

uniform vec3 color;
uniform sampler2D tex0;

in jit_PerVertex {
  vec2 texcoord0;
  vec3 textureNoise;
} jit_in;

layout (location = 0) out vec4 outColor;

void main() {

	vec4 textureColor = texture(tex0, jit_in.texcoord0*2.0);
  outColor = vec4(textureColor.rgb * color * abs(jit_in.textureNoise), 1.0);

}
]]>
</program>
</language>
</jittershader>