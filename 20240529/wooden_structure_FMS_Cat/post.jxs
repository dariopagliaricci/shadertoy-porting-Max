<jittershader name="default">
	<description>Default Slab </description>

	<param name="MVP" type="mat4" state="MODELVIEW_PROJECTION_MATRIX" />
	<param name="position" type="vec3" state="POSITION" />
	<param name="uv" type="vec2" state="TEXCOORD" />

	<param name="viewPort" type="vec2" state="VIEWPORT" />
	<param name="iChannel0" type="int" default="0" />


	<language name="glsl" version="1.5">

		<bind param="MVP" program="vp" />
		<bind param="position" program="vp" />
		<bind param="uv" program="vp" />

		<bind param="viewPort" program="fp" />
		<bind param="iChannel0" program="fp" />


		<program name="vp" type="vertex"  >
		<![CDATA[
			#version 330 core
			
			in vec3 position;
			in vec2 uv;

			out jit_PerVertex {
				vec2 uv;

			} jit_out;
			uniform mat4 MVP;

			
			void main(void) {
				gl_Position = MVP*vec4(position, 1.);
				jit_out.uv = uv;

			}
		]]>
		</program>
		
<program name="fp" type="fragment"  >
<![CDATA[
#version 330 core

in jit_PerVertex {
	vec2 uv;
} jit_in;
layout (location = 0) out vec4 outColor;

uniform vec2 viewPort; 
uniform sampler2D iChannel0;


void main() {

  vec2 fragCoord = jit_in.uv * viewPort.xy;
  vec4 tex = texelFetch( iChannel0, ivec2( fragCoord.xy ), 0 );

  // vec3 col = pow( tex.rgb / tex.a, vec3( 0.4545 ) );
  vec3 col = sqrt( tex.rgb / tex.a );

  outColor = vec4(
    smoothstep( 0.1, 0.8, col.x ),
    smoothstep( 0.0, 1.0, col.y ),
    smoothstep( -0.2, 1.3, col.z ),
    1
  );
}
]]>
</program>
</language>
</jittershader>
