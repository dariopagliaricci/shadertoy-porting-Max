<jittershader name="default">
	<description>Default Slab </description>

	<param name="iResolution" type="vec2" state="VIEWPORT"/>
	<param name="iTime" type="float" default="0.0" />

	<param name="buff_A" type="int" default="0" />

	<param name="modelViewProjectionMatrix" type="mat4" state="MODELVIEW_PROJECTION_MATRIX" />
	<param name="textureMatrix0" type="mat4" state="TEXTURE0_MATRIX" />
	<param name="position" type="vec3" state="POSITION" />
	<param name="texcoord" type="vec2" state="TEXCOORD" />

	<language name="glsl" version="1.5">

		<bind param="iResolution" program="fp" />
		<bind param="iTime" program="fp" />

		<bind param="buff_A" program="fp" />
		

		<bind param="modelViewProjectionMatrix" program="vp" />
		<bind param="textureMatrix0" program="vp" />
		<bind param="position" program="vp" />
		<bind param="texcoord" program="vp" />
		
		<program name="vp" type="vertex"  >
		<![CDATA[
			#version 330 core
			
			in vec3 position;
			in vec2 texcoord;
			out jit_PerVertex {
				vec2 texcoord;
			} jit_out;
			uniform mat4 modelViewProjectionMatrix;
			uniform mat4 textureMatrix0;
			
			void main(void) {
				gl_Position = modelViewProjectionMatrix*vec4(position, 1.);
				jit_out.texcoord = vec2(textureMatrix0*vec4(texcoord, 0., 1.));
			}
		]]>
		</program>
		
		<program name="fp" type="fragment"  >
		<![CDATA[
			#version 330 core
			
			in jit_PerVertex {
				vec2 texcoord;
			} jit_in;
			layout (location = 0) out vec4 fragColor;

			uniform vec2 iResolution;
			uniform float iTime;
			uniform sampler2D buff_A;
			
			
			/*
			@lsdlive
			CC-BY-NC-SA

			Organic Dodecahedron.

			Alpha-blending volumetric algorithm inspired from:
			"Cloudy spikeball" by Duke (& las): https://www.shadertoy.com/view/MljXDw
			"Pyroclastic explosion" by simesgreen: https://www.shadertoy.com/view/XdfGz8


			Some notation:
			p: position (usually in world space)
			rd: ray direction (eye or view vector)
			*/


			// Radial blur postfx from XT95:
			// https://github.com/XT95/VisualLiveSystem/blob/master/release/data/postFX/green-pink%20blur.glsl

			void main()
			{
			    
				vec2 fragCoord = jit_in.texcoord * iResolution;
			    vec2 uv = fragCoord.xy/iResolution.xy;

			    float amt_blur = 45.;
				float amt_dist = 50.;
			    
				vec2 offset =  normalize(uv-.5)*pow(length(uv-.5),4.)/amt_blur;
				vec2 offset2 = (uv-.5)/amt_dist;
				vec3 col = vec3(0.);
				for(int i=0; i<16; i++)
				{
					//RGB distortion
					col.r += texture(buff_A,uv+offset*float(i)+offset2).r;
					col.g += texture(buff_A,uv+offset*float(i)).g;
					col.b += texture(buff_A,uv+offset*float(i)-offset2).b;
				}
				col /= 16.; // box blur
			    
			    // vignetting
			    col *= 0.5 + 0.5*pow(16.0*uv.x*uv.y*(1.0 - uv.x)*(1.0 - uv.y), 0.25);
			    
			    fragColor.rgb = col;
				fragColor.a = 1.;
			}
		]]>
		</program>
	</language>
</jittershader>
