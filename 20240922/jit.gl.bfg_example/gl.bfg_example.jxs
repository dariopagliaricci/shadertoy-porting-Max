<jittershader name="default">
	<description> Default shader </description>
	
	<param name="MV"   type="mat4" state="MODELVIEW_MATRIX" />
	<param name="P"  type="mat4" state="PROJECTION_MATRIX" />
	<param name="tex0Mat"   type="mat4" state="TEXTURE0_MATRIX" />
	<param name="normalMat"  	 type="mat3" state="NORMAL_MATRIX" />

	<param name="uv"   type="vec2" state="TEXCOORD" />
	<param name="pos"      type="vec3" state="POSITION" />
	<param name="vertexNormal"   type="vec3" state="NORMAL" />

	<param name="noiseTex"   type="int" default="0" />
	<param name="freq"       type="float" default="2.0" />
	<param name="colorFreqs" type="vec3" default="1.0 1.0 1.0" />
	
	<language name="glsl" version="1.5">
	
		<bind param="noiseTex"   program="vp" />
		<bind param="freq"       program="vp" />
		<bind param="colorFreqs" program="vp" />

		<bind param="MV" program="vp" />
		<bind param="P" program="vp" />
		<bind param="tex0Mat" program="vp" />
		<bind param="uv" program="vp" />
		<bind param="pos" program="vp" />
		<bind param="normalMat" program="vp" />
		<bind param="vertexNormal" program="vp" />
				
		<program name="vp" type="vertex">
<![CDATA[
#version 330 core

uniform mat4 MV;
uniform mat4 P;
uniform mat4 tex0Mat;
uniform mat3 normalMat;

in vec2 uv;
in vec3 pos;
in vec3 vertexNormal;

uniform sampler2D noiseTex;
uniform float	  freq;
uniform vec3 colorFreqs;

out vec4 color;

void main (void)
{	
	
	vec2 texcoord = (tex0Mat * vec4(uv, 0.0, 1.0)).xy;
	
	float noise = texture(noiseTex, texcoord*freq).x;
	
	vec4 posEyeSpace = MV * vec4(pos, 1.0);
	
	vec3 normal = normalMat * vertexNormal;
	normal = normalize(normal);
	
	vec4 newPos = posEyeSpace + vec4(normal, 0.0)*noise;
	
    gl_Position = P * newPos;

	color = vec4(abs(sin(noise * colorFreqs.x)), abs(cos(noise*colorFreqs.y)), abs(sin(noise*colorFreqs.z + 1000)), 1.0);
}
]]>		
		</program>
		<program name="fp" type="fragment">
<![CDATA[
#version 330 core

in vec4 color;

out vec4 outColor;

void main()
{	
	outColor = color;
} 
]]>
		</program>
	</language>
</jittershader>
