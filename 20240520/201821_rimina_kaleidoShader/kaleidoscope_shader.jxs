<jittershader name="default">
	<description>Default Slab </description>

	<param name="MVP" type="mat4" state="MODELVIEW_PROJECTION_MATRIX" />
	<param name="position" type="vec3" state="POSITION" />
	<param name="uv" type="vec2" state="TEXCOORD" />

	<param name="viewPort" type="vec2" state="VIEWPORT" />
	<param name="angle" type="float" default="0.0" />
	<param name="sides" type="float" default="6.0" />
	<param name="iChannel0" type="int" default="0" />

	<language name="glsl" version="1.5">

		<bind param="MVP" program="vp" />
		<bind param="position" program="vp" />
		<bind param="uv" program="vp" />

		<bind param="viewPort" program="fp" />
		<bind param="angle" program="fp" />
		<bind param="sides" program="fp" />
		<bind param="iChannel0" program="fp" />


		<program name="vp" type="vertex"  >
		<![CDATA[
			#version 330 core
			
			in vec3 position;
			in vec2 uv;

			out jit_PerVertex {
				vec2 uv;

			} jit_out;
			uniform mat4 MVP;
			
			void main(void) {
				gl_Position = MVP*vec4(position, 1.);
				jit_out.uv = uv;

			}
		]]>
		</program>
		
		<program name="fp" type="fragment"  >
		<![CDATA[
#version 330 core

in jit_PerVertex {
	vec2 uv;

} jit_in;
layout (location = 0) out vec4 outColor;

uniform vec2 viewPort;
uniform float angle, sides;
uniform sampler2D iChannel0;
			
void main() {

	vec2 fragCoord = jit_in.uv * viewPort.xy;
	vec2 uv = fragCoord.xy / viewPort.xy;

	vec2 p = uv - 0.5;
	float r = length(p);
	float a = atan(p.y, p.x) + angle;
	float tau = 2. * 3.1416 ;
	a = mod(a, tau/sides);
	a = abs(a - tau/sides/2.) ;
	p = r * vec2(cos(a), sin(a));
	vec4 color = texture(iChannel0, p + 0.5);
	outColor = color;

}

		]]>
		</program>
	</language>
</jittershader>
